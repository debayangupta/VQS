<html>
<head>
<title>Scatterplot</title>

<script type="text/javascript" src="protovis-3.2/protovis-r3.2.js"></script>
<script type="text/javascript" src="mainscript.js"></script>

<style type="text/css">
.wrap {float:left;padding:20px;background:#EEE}
.wrap > div {background:white}
#control {}
</style>

<script type="text/javascript">
window.onload = function() {
	_gel('update').val = 1;
	_gel('update').onclick = function() {doUpdate('data/updateList.json')};
}
</script>

</head>

<body>

<div class="wrap">
<!-- wrapper -->

<div id="scplot0">
	<script type="text/javascript+protovis">
// this is visualization p[0]
p.push('scplot0');
dx = getData( 'scatterplot', 'data/direct_scplot0.json', 400, 400, 'x1', 'y1', 'z1');

/* The root panel. vis[p[0]] == this.root*/
vis[ p[0] ] = new pv.Panel()
    .width(dx.w)
    .height(dx.h)
    .bottom(20)
    .left(20)
    .right(10)
    .top(5);
	
/* scales. */
vis[ p[0] ].x = pv.Scale.linear(0, 99).range(0, dx.h);
vis[ p[0] ].y = pv.Scale.linear(0, 1).range(0, dx.h);
vis[ p[0] ].c = pv.Scale.log(1, 100).range("blue", "black");

/* Y-axis and ticks. */
vis[ p[0] ].add(pv.Rule)
    .data(vis[ p[0] ].y.ticks())
    .bottom(vis[ p[0] ].y)
    .strokeStyle(function(d) d ? "#eee" : "#000")
  .anchor("left").add(pv.Label)
    .visible(function(d) d > 0 && d < 1)
    .text(vis[ p[0] ].y.tickFormat);

/* X-axis and ticks. */
vis[ p[0] ].add(pv.Rule)
    .data(vis[ p[0] ].x.ticks())
    .left(vis[ p[0] ].x)
    .strokeStyle(function(d) d ? "#eee" : "#000")
  .anchor("bottom").add(pv.Label)
    .visible(function(d) d > 0 && d < 100)
    .text(vis[ p[0] ].x.tickFormat);

/* The dot plot! */
vis[ p[0] ].tdata = vis[ p[0] ].add(pv.Panel);
    vis[ p[0] ].tdata.data(dx.data)
  .add(pv.Dot)
    .left(dx.xval)
    .bottom(dx.yval)
    .strokeStyle(dx.colour)
    .fillStyle(function() this.strokeStyle().alpha(.2))
    .size(dx.size)
    .title(dx.title);//----------
	
vis[ p[0] ].s = false;

vis[ p[0] ].internalUpdate = function(d) {
	vis[ p[0] ].s = d;
	_gel('x3').innerHTML = '(x,y) = (' + d.x + ', ' + d.y + ')\n (width, height) = (' + d.dx + ', ' + d.dy + ')';
}

vis[ p[0] ].add(pv.Panel)
	.data([{x:20, y:20, dx:100, dy:100}])
	.cursor("crosshair")
	.events("all")
	.event("mousedown", pv.Behavior.select())
	.event("selectstart", function() (vis[ p[0] ].s = false, vis[ p[0] ]))
	.event("select", vis[ p[0] ].internalUpdate) //update dx, dy
	.add(pv.Bar)
	.visible(function(d, k, t) vis[ p[0] ].s)
	.left(function(d) d.x)
	.top(function(d) d.y)
	.width(function(d) d.dx)
	.height(function(d) d.dy)
	.fillStyle("rgba(255,0,0,.15)")
	.strokeStyle("white")
	.cursor("move")
	.event("mousedown", pv.Behavior.drag())
	.event("drag", vis[ p[0] ].internalUpdate) // update x,y
	.event("mouseup", function() {} ); // completed selection

vis[ p[0] ].render();

</script>
</div>

<div id="control">
	<input type="button" value="update" id="update"/>
	<span id="x3"></span>
</div>

<!-- wrapper -->
</div>


<div class="wrap">
<!-- wrapper -->

<div id="lplot">
<p>TODO: Insert linked 'focus+context' here.</p>
	<script type="text/javascript+protovis">
// this is visualization p[1]

	</script>
</div>

<!-- wrapper -->
</div>

</body>
</html>